apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

archivesBaseName = 'hmac-api-client'
group = 'com.modulr.modulo.client'
	
/* versions of dependencies */
ext {
	/* compile time dependencies*/
	SWAGGER_JAVA_CLIENT_VERSION = '3.3.1'
}

repositories {
    maven {
          url "https://repo1.maven.org/maven2/"
    }
}

dependencies {
	compile files('lib/swagger-java-client-' + SWAGGER_JAVA_CLIENT_VERSION + '.jar')
	compile 'joda-time:joda-time:2.10.8'
    compile 'io.swagger:swagger-annotations:1.5.17'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.5'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'io.gsonfire:gson-fire:1.8.0'
    compile 'org.threeten:threetenbp:1.3.5'
}

task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

jar {
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath

    from {
        configurations.runtimeClasspath.findAll { it.name.equals('swagger-java-client-' + SWAGGER_JAVA_CLIENT_VERSION + '.jar') }.collect { zipTree(it) }
    }
}

artifacts {
     archives sourcesJar
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/" + System.getenv('PUBLISH_REPOSITORY'))
            credentials {
                username = System.getenv('PUBLISH_ACTOR')
                password = System.getenv('PUBLISH_TOKEN')
            }
        }
    }
    publications {
        gcp(MavenPublication) {
            from(components.java)
            artifacts = [ jar ]
        }
    }
}
